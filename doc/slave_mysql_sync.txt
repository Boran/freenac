_____________ Mysql Slave re-sync checklist __________________________
                                               
slave_mysql_sync.txt                          Last Update: 19.7.06/SB
______________________________________________________________________


1. Introduction
================
Reference.http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html
Replace the following below:
		SERVER2.DOMAIN                 the FQDN of your slave
		REPL_PASSWD                    Replication password


2. Master: enable replication
==============================

On the mysql prompt:

GRANT SELECT, PROCESS, FILE, SUPER, REPLICATION CLIENT, REPLICATION SLAVE ON *.*
  TO 'repl'@'vmps2' IDENTIFIED BY 'REPL_PASSWD';
  
SHOW MASTER STATUS;

Purge uneeded logs on the master:
PURGE MASTER LOGS TO 'SERVER-bin.NUMBER'            [the exactname comes from the File field in the status above]
    

3. Re-synchronisation
=====================
We'll use "vmps2" to mean the slave, and "vmps1" to mean the master.

0) vmps2
stop slave;

1) Master vmps1: Lock tables, note log position, restart

FLUSH TABLES WITH READ LOCK;

vmps1:/mysqldata[11]$ 
tar cvf inventory.tar inventory

mysql> SHOW MASTER STATUS;
+------------------------+----------+--------------+------------------+
| File                   | Position | Binlog_Do_DB | Binlog_Ignore_DB |
+------------------------+----------+--------------+------------------+
| vmps1-bin.000027       | 12717436 |              |                  |
+------------------------+----------+--------------+------------------+

==> take note of the position

UNLOCK TABLES;


2) Slave vmps2:

- stop mysql
rcmysql stop

- Copy DB tar file from master & extract:
   mv inventory inventory.$$
   scp vmps1:/mysql/inventory.tar .
   tar xvf inventory.tar
   chmod 770 inventory; chmod g+s inventory; chown -R mysql:mysql inventory;

- Configure slave: start daemon with slave off

/usr/local/mysql/bin/mysqld --user=mysql --skip-slave-start --log-warnings



Start mysql client:
	reset slave;

# CHANGE MASTER TO MASTER_HOST='XXXX', MASTER_USER='repl',
  MASTER_PASSWORD='YYYY', MASTER_LOG_FILE='file_name',         MASTER_LOG_POS=XXXX;
  
- Start replication:
	START SLAVE;
	show slave status \G;

- Check the log position with that on the master:
	show master status;

- Also check the slave mysql log for errors.

- If all looks fine, stop the slave and start it normally:

   rcmysql stop
   rcmysql start


3. Fixing a replication problem
================================
We noticed that replication had stopped due to an invalid query.
Repliction if OK if
    show slave status \G;
shows the master log position  correct, Slave_IO_Running: Yes and Slave_SQL_Running: Yes.

In this eaxmple, Slave_SQL_Running was 'No', so we fixed it, by stopping the slave and 
skipping the SQL Query causing the problem:

  stop slave;
  SET GLOBAL SQL_SLAVE_SKIP_COUNTER=1;
  start slave;
  show slave status \G;
  
It now skips to the next error:
          Slave_SQL_Running: No
          Last_Error: Error 'Unknown table 'inventory.v_1'' on query. Default database: 'inventory'. Query: 'DROP   VIEW v_1'

To get through these difficult queries, had to do the above three times.
  
[Note: I don't know by these (test) queries to create and drop views failed, but thats another story]
         
  More reading:
  http://dev.mysql.com/doc/refman/5.0/en/set-global-sql-slave-skip-counter.html
  http://dev.mysql.com/doc/refman/5.1/en/replication-options.html

4. Monitoring replication
=========================
Install /opt/vmps/monitor_mysql_slave and call it from cron on the slave:
*/5  7-18 * * 1-5 /opt/vmps/monitor_mysql_slave


// done