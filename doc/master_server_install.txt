
_____________ Install checklist: FreeNAC Master       _______________

master_server_install.txt                   Last Update: 23.02.2007/SB
______________________________________________________________________


0. INTRODUCTION
===============
This is a "copy & paste" guide for *expert* administrators for setting up an
FreeNAC master server. The instructions assume that one build all needed components
from source. Depending on your distribution this may not be necessary, but this way
one can be sure that all the needed options are enabled, and its resproduceable.
The reference Linux distribution is Suse Linux.

The software versions below were the latest when we last used these instructions,
obviously the newest versions are to be used when doing this, so adapt
the versions numbers below accordingly.
Note also that a virtaul machine is available on FreeNAC.net, if this all sounds a
complicated.


1. UNIX/Linux preparation
===================
see unix_install.txt
	
	
2. Installing OS (Suse) packages
===========================
see unix_install.txt

  
3. Compiling/ installing Key components
=======================================
Download : you'll need to download the following files 

http://mirror.switch.ch/ftp/mirror/apache/dist/httpd/httpd-2.2.2.tar.gz
http://mirror.switch.ch/ftp/mirror/mysql/Downloads/MySQL-5.0/mysql-5.0.27.tar.gz
ftp://fr.rpmfind.net/pub/libxml/libxml2-2.6.23.tar.gz
http://www.ibiblio.org/pub/Linux/ALPHA/freetds/stable/release_candidates/freetds-0.64RC2.tar.gz
http://ch2.php.net/get/php-5.1.6.tar.bz2/from/this/mirror


Freenac
  Start by downloading the latest stable release nac tarball from FreeNac.net,
  copying to /opt, and extracting it into /opt/nac.
  Or, checking out directly from Subversion.
  

Apache 2.2.2 (from source):  
  cd /opt/install
  tar xvzf httpd-2.2.2.tar.gz
  cd httpd-2.2.2
  ./configure --prefix=/usr/local/apache2 --enable-so
  make install
  ln -s /usr/local/apache2 /usr/local/apache
  ln -s /usr/local/apache2/bin/apachectl /etc/init.d/apache2
  ln -s /usr/local/apache2/bin/apachectl /sbin/rcapache2
  # Actually start apache if you intend using the web interfaces, see below:
  chkconfig apache2 on
  rcapache2 start

  
MYSQL 5 (from sources: recommended):
  Prerequisites: yast -i ncurses-devel gcc-c++

  cd /opt/install
  tar xvzf mysql-5.0.27.tar.gz
  cd mysql-5.0.27
  ./configure --prefix=/usr/local/mysql-5.0.27 --localstatedir=/mysqldata --with-unix-socket-path=/var/lib/mysql/mysql.sock
  make install
  cd /usr/local
  mv mysql mysql.$$            [in case you have a link already]
  ln -s mysql-5.0.27 mysql
  ln -s /usr/local/mysql/bin/mysqld_safe /usr/local/mysql/bin/mysqld
  
  
MYSQL: create directories, links, users, setting permissions 
  Create a mysql user:  
    groupadd mysql
    useradd -g mysql mysql 
  
  cd /usr/local/mysql
  bin/mysql_install_db --user=mysql
  mv data /var/lib/mysql  
  ln -s /var/lib/mysql data
  ln -s /var/lib/mysql /mysqldata
  ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock
      
  copy /etc/my.cnf from /opt/nac/contrib/etc/my.cnf
    Adapt log-bin and report-host to include hostname:
    log-bin=vmps1-bin
    report-host= vmps1
  
  copy /etc/init.d/mysql from /opt/nac/contrib/startup_init.d 
    Enable the service:
    chkconfig mysql on 
    ln -s /etc/init.d/mysql /usr/sbin/rcmysql

  Add mysql to path:
    vi /etc/profile.local
    . /etc/profile.local
  
  Set permissions:
    chown -R root  .
    chown -R mysql /mysqldata /var/lib/mysql
    chgrp -R mysql .    
 
  You may also want to change the mysql "root" password 
  (see the end of this doc).


MYSQL: Install an initial set of empty FreeNAC tables for the 
  'opennac' database, backing up the existing tables first:
    cd /mysqldata
    mv mysql mysql.$$
    mv inventory inventory.$$  
    cp /opt/nac/contrib/opennac_db.tar.gz .
    tar xvzf opennac_db.tar.gz
  
  Start mysql, check that its OK:
    rcmysql start  
    check /mysqldata/localhost.err for errors.
  Login to sql and look at a few tables:
    mysql opennac
  		show tables;
  		select * from ports;



libxml (from source):
  cd /opt/install
  tar xvzf libxml2-2.6.24.tar.gz
  cd libxml2-2.6.24/
  ./configure --prefix=/opt/libxml2 && make install  
  

FreeTDS:   If you need to access MS-SQL or Sybase Enterprise databases:
  cd /opt/install
  wget http://www.ibiblio.org/pub/Linux/ALPHA/freetds/stable/release_candidates/freetds-0.64RC2.tar.gz
  tar xvzf freetds-0.64RC2.tar.gz
  cd freetds-0.64RC2
  ./configure --prefix=/opt/freetds  --enable-msdblib
  make install
  vi /opt/freetds/etc/freetds.conf and add a definition to a DB to test: 
   [sms]                                           <-- alias name
        host = MyServer.mydomain.com               <-- sever name/IP
        port = 1433
        tds version = 4.2
        dump file = /var/log/freetds.log
        dump file append = yes
        #debug level = 10
        debug level = 3
        
  Try connectivity:
        /opt/freetds/bin/tsql -S [alias] -U [user] -P [password]


PHP5:
Install first the graphics support needed by the web1
  yast -i gd-devel freetype2-devel zlib-devel libpng-devel libjpeg-devel 
  yast -i net-snmp net-snmp-devel tcpd-devel rpm-devel
  yast -i openssl openssl-devel openldap2-devel graphviz  
  cd /opt/install;
  tar xBf php-5.2.0.tar.bz2
  cd php-5.2.0

  # Question: what is this comment?? [sb, 4.12.06]
  # Copy some ttf fonts from a Windows box to /usr/X11R6/lib/X11/fonts/truetype/ (specially verdana.ttf) 
  
  # Without TDS:
  ./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql --prefix=/opt/php-5.2.0 --with-xml --with-libxml-dir=/opt/libxml2 --enable-pcntl --enable-force-cgi-redirect --with-gd --with-zlib-dir --with-ttf --with-freetype-dir --with-ldap

  ## If you need MS-SQL (its best to assume you do - FreeTDS was compiled above)
  ./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql --with-mysql-sock=/var/lib/mysql/mysql.sock --prefix=/opt/php-5.2.0 --with-xml --with-libxml-dir=/opt/libxml2 --enable-pcntl --enable-force-cgi-redirect --with-mssql=/opt/freetds --with-gd --with-zlib-dir --with-ttf --with-freetype-dir --with-snmp=/usr --enable-ucd-snmp-hack --with-ldap





  Note: On suse, PHP may complain about MySQL libraries, it may be best to 
        compile mySQL from source (see above), rather than using binary packages.

  make install    
  
  ## Setup details php environment:
  mv /usr/local/lib/php.ini /usr/local/lib/php.$$
  ci -l /etc/php5/cli/php.ini
  mv /etc/php5/cli/php.ini /etc/php5/cli/php.ini.$$
  cp php.ini-recommended /etc/php5/cli/php.ini
  ## To do: list of recommended settings in php.ini
 
  mv /usr/bin/php /usr/bin/php.$$
  mv /opt/php5 /opt/php5.$$
  ln -s /opt/php-5.2.0 /opt/php5    
  ln -s /opt/php5/bin/php /usr/bin/php

  Test PHP: 
  	php -v
  
  Note: To allow easier upgrading, rollback or testing new PHP modules, we install into a 
  version specific directory like '/opt/php5.2.0' above, and create links to this 
  directory. 

  Edit your httpd.conf (e.g. /usr/local/apache/conf/httpd.conf) to load the PHP module
    LoadModule php5_module modules/libphp5.so
    
  The path on the right hand side of the LoadModule statement must point to the 
  path of the PHP module on your system.  Then "make install" from above may 
  have already added this for you, but be sure to check.
  Also, tell Apache to parse certain extensions as PHP in httpd.conf
    AddType application/x-httpd-php .php .phtml
    AddType application/x-httpd-php-source .phps     
  


____________________________________________________________________________

      Initial Configuration
____________________________________________________________________________
      
      
Database rights
===============
There are 4 mysql users needed for accessing the database. 
A. Local daemon user for PHP scripts: inventwrite@localhost
B. A user for the remote Delphi Windows GUI: inventwrite@'%' 
C. Root is used by the sysadmin for local configuration. By default root 
   is only allowed from localhost, and has no password. Its is 
   recommended that you set a root password for mysql root, if the NAC 
   server login is accessible to several users.
D. The Web1 GUI has a specific user%localhost, by default called "readonly".
E. The Web2 GUI has a specific user%localhost, by default called "webwrite".

Local daemon use for PHP scripts (set the user/pw in /opt/nac/config.inc):
  grant SELECT,INSERT,UPDATE        ON opennac.*       to inventwrite@localhost IDENTIFIED by 'PASSWORD2';
  SET PASSWORD FOR inventwrite@localhost = OLD_PASSWORD('PASSWORD2');
  
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.systems to inventwrite@localhost;
  grant CREATE TEMPORARY TABLES     ON opennac.*        to inventwrite@localhost;
  grant ALL                         ON opennac.vmpsauth to inventwrite@localhost;
  
Remote delphi Windows GUI use. See also the vmps.ini file on the Windows client.
  grant SELECT,INSERT               ON opennac.*       to inventwrite@'%' IDENTIFIED by 'PASSWORD1';
  SET PASSWORD FOR inventwrite@'%' = OLD_PASSWORD('PASSWORD1');

  grant SELECT,UPDATE               ON opennac.oper    to inventwrite@'%' ;
  grant SELECT,UPDATE               ON opennac.config  to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.building to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.location to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.port    to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.switch  to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.vlan    to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.systems to inventwrite@'%';
  grant SELECT,INSERT,UPDATE,DELETE  ON opennac.users   to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.patchcable to inventwrite@'%';
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.vlanswitch to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.cabletype  to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.sys_class to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.sys_class2 to inventwrite@'%' ;
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.sys_os        to inventwrite@'%';
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.sys_os1       to inventwrite@'%';
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.sys_os2       to inventwrite@'%';
  grant SELECT,INSERT,UPDATE,DELETE ON opennac.sys_os3       to inventwrite@'%';

The read-only webgui Web1 needs "read" access and by default uses a user 
named 'readonly'. See also /opt/nac/web1/config.inc.  
  grant SELECT       ON opennac.* to readonly@'localhost' IDENTIFIED by 'PASSWORD1';

The webgui Web2 needs "read-write" access and by default uses a user 
  grant SELECT,INSERT        ON opennac.*       to webwrite@'localhost' IDENTIFIED by 'PASSWORD1';
  SET PASSWORD FOR webwrite@'localhost' = OLD_PASSWORD('PASSWORD1');
  grant SELECT,UPDATE        ON opennac.systems to webwrite@'localhost' ;
  grant SELECT               ON opennac.users   to webwrite@'localhost' ;
  grant SELECT,              ON opennac.patchcable to webwrite@'localhost' ;
  grant SELECT,              ON opennac.port    to webwrite@'localhost' ;
  grant SELECT               ON opennac.oper    to webwrite@'localhost' ;
  grant SELECT               ON opennac.switch  to webwrite@'localhost' ;
  grant SELECT               ON opennac.vlan    to webwrite@'localhost' ;
  grant SELECT,INSERT,UPDATE ON opennac.sys_class to webwrite@'localhost' ;
  grant SELECT,INSERT,UPDATE ON opennac.sys_os to webwrite@'localhost';
  grant SELECT               ON opennac.nac_openports to webwrite@'localhost' ;


Populate tables
===============
Then, you need to populate the following tables. Since v2.2 the DB schema is more normalised, so 
you need to be much more careful: indices are used everywhere. Its recommended that you read
the Schema documentation first.

The easiest was to do the following is from the Windows GUI.

A. switches : at the beginning, you just need to insert your test switch(es) :
	# V2.1:
	INSERT INTO switch(ip,name,location) VALUES ('192.168.123.11','switch11','5th floor');
	# TBD: V2.2

B. ports : this is optional as it will be populated once new machine are connecting.
   However, it is interesting to pre-populate the field to ease the transition. By setting the "default_vlan" field to the actual vlan configured on this port, you can get the new (unknown) hosts on the same vlan (see config.inc).
	# V2.1:
	INSERT INTO port(switch,name,location,default_vlan) VALUES ('192.168.254.11','Fa/0/2','5 B','123');
	# TBD: V2.2	

C. users : this contains all your users. It is probably better to regularly update this table by pulling data from a directory (ActiveDirectory: see optional modules below)
	# V2.1:
	INSERT INTO users(Username,Surname,GivenName,rfc822mailbox,HouseIdentifier,PhysicalDeliveryOfficeName,Mobile) VALUES ("username","Jean","Doe","jean.doe@foo.ch","Building B","5 B2","0797704803);
	# TBD: V2.2
	
D. The vlan table is a list for vlans, number, descritions.
   The vlan index is used to refer to a vlan from the systems table.
   
E. Optionally: The Operating System, Classifciation, Building, Location tables.



config.inc:
===========
Create a config.inc from a template and set especially the DB connection parameters:
  cp /opt/nac/etc/config.inc.template /opt/nac/etc/config.inc
  vi /opt/nac/etc/config.inc


At this stage The DB should be working and PHP should be able to access the DB, and the
messages logged through syslog to '/var/log/messages'.




Starting the NAC daemons:
=========================
Start the vmps daemon, by creating a startup file and starting the service:

  cp /opt/nac/contrib/startup_init.d/vmps /etc/init.d/vmps
  ln -s /etc/init.d/vmps /usr/sbin/rcvmps
  chmod 750 /etc/init.d/vmps
  chkconfig vmps on
  vi /etc/init.d/vmps       [adapt IP address on vmpsd start line]
   
  Start and watch syslog for events:
  rcvmps start
  tail -f /var/log/messages
  

Start the vmps_lastseen daemon, by creating a startup file and starting the service:

  cp /opt/nac/contrib/startup_init.d/vmps_lastseen /etc/init.d/vmps_lastseen
  ln -s /etc/init.d/vmps_lastseen /usr/sbin/rcvmps_lastseen
  chmod 750 /etc/init.d/vmps_lastseen
  chkconfig vmps_lastseen on
  
  Start and watch syslog for events:
  rcvmps_lastseen start
  tail -f /var/log/messages


Test purging of old unknown device entries in the system table (and watch syslog):
  /opt/nac/bin/purge_unknowns 
  
Then enable this in the root in cron:
0   1   26 * *   /opt/nac/bin/purge_unknowns  
