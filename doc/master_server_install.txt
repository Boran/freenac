
_____________ Install checklist: FreeNAC Master       _______________

master_server_install.txt                      Last Update: 19.7.06/SB
______________________________________________________________________


0. INTRODUCTION
===============
This is a "copy & paste" guide for *expert* administrators for setting up an
FreeNAC master server.
Untar this file under /opt
It will create /opt/nac



1. UNIX preparation
===================
see unix_install.txt
	
2. Installing Suse packages
===========================
see unix_install.txt

  
3. Compiling/ installing Key components
=======================================

Apache 2.2.2:
cd /opt/install
tar xvzf http-2.2.2.tar.gz
cd http-2.2.2
./configure --prefix=/usr/local/apache2 --enable-so
make install
ln -s /usr/local/apache2 /usr/local/apache

MYSQL 5 (From binaries):
  cd /opt/install  
  tar xvzf mysql-max-5.0.18-linux-i686.tar.gz
  mv mysql-max-5.0.18-linux-i686 /usr/local
  cd /usr/local
  ln -s mysql-max-5.0.18-linux-i686 mysql
  cd /usr/local/mysql
  scripts/mysql_install_db               [install empty mysql config tables]
  mv data /var/lib/mysql
  ln -s /var/lib/mysql data
  ln -s /var/lib/mysql /mysqldata
  ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock
      
  copy /etc/my.cnf from another machine
    Adapt log-bin and report-host to include hostname:
    log-bin=vmps1-bin
    report-host     = vmps1
  
  copy /etc/init.d/mysql from another machine 
    Enable the service:
    chkconfig mysql on 
    ln -s /etc/init.d/mysql /usr/sbin/rcmysql

  Add mysql to path:
  . /etc/profile.local
    
  groupadd mysql
  useradd -g mysql mysql
  chown -R mysql:mysql *
  chgrp -R mysql /usr/local/mysql/*
  
MYSQL 5 (from sources):
  cd /opt/install
  tar xvzf mysql-5.0.22.tar.gz
  cd /opt/install/mysql-5.0.22
  groupadd mysql
  useradd -g mysql mysql
  mkdir /mysqldata
  ./configure --prefix=/usr/local/mysql-5.0.22 --localstatedir=/mysqldata --with-unix-socket-path=/tmp/mysql.sock
  make install
  cp support-files/my-large.cnf /etc/my.cnf
  cp support-files/mysql.server /etc/init.d/mysql
  chmod 744 /etc/init.d/mysql
  ln -s /etc/init.d/mysql /usr/sbin/rcmysql
  cd /usr/local/mysql
  bin/mysql_install_db --user=mysql
  ln -s /mysqldata /var/lib/mysql
  chown -R root  .
  chown -R mysql /mysqldata /var/lib/mysql
  chgrp -R mysql .


Modify /etc/my.cnf
  report-host     = mysql

Enable the service:
  chkconfig mysql on 
  ln -s /etc/init.d/mysql /usr/sbin/rcmysql

Add mysql to path in /etc/profile

GET DATA:
  cd /mysqldata
  mv mysql mysql.orig
  copy over the FreeNAC sample inventory database (which is in /opt/nac/contrib/inventory_sample.tar.gz) and untar it to the /mysqldata directory 
  cp /opt/nac/contrib/inventory_sample.tar.gz .
  untar xvzf inventory_sample.tar.gz
That must create the sample tables required for FreeNAC to work  
START mysql, check that all is OK:
  rcmysql start  
  check /mysqldata/localhost.err for errors.
  mysql inventory
  		show tables;
  		select * from ports;

libxml:
  cd /opt/install
  tar xvzf libxml2-2.6.22.tar.gz
  cd libxml2-2.6.22/
  ./configure --prefix=/opt/libxml2 && make install  
  
  Add /opt/libxml2/lib to 


FreeTDS:   If you need to access MS-SQL or Sybase Enterprise databases:
  cd /opt/install
  wget http://www.ibiblio.org/pub/Linux/ALPHA/freetds/stable/release_candidates/freetds-0.64RC2.tar.gz
  ./configure --prefix=/opt/freetds  --enable-msdblib
  make install
  vi /opt/freetds/etc/freetds.conf and add a definition to a DB to test: 
   [sms]                                           <-- alias name
        host = MyServer.mydomain.com               <-- sever name/IP
        port = 1433
        tds version = 4.2
        dump file = /var/log/freetds.log
        dump file append = yes
        #debug level = 10
        debug level = 3
        
  Try connectivity:
        /opt/freetds/bin/tsql -S [alias] -U [user] -P [password]


PHP5:
Install first the graphics support needed by the web1
  yast -i gd-devel freetype2-devel
  cd /opt/install;
  tar xBf php-5.1.6.tar.bz2
  cd /opt/install/php-5.1.6/
  
  ./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql --prefix=/opt/php5 --with-xml --with-libxml-dir=/opt/libxml2 --enable-pcntl --enable-force-cgi-redirect --with-gd --with-zlib-dir --with-ttf --with-freetype-dir
  
  ## If you need MS-SQL (its best to assume you do - FreeTDS was compiled above)
  ./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql --prefix=/opt/php5 --with-xml --with-libxml-dir=/opt/libxml2 --enable-pcntl --enable-force-cgi-redirect --with-sybase=/opt/freetds --with-gd --with-zlib-dir --with-ttf --with-freetype-dir
  make install    
  cp php.ini-dist /usr/local/lib/php.ini
  ln -s /opt/php5/bin/php /usr/bin/php

Edit your httpd.conf to load the PHP module
  LoadModule php5_module modules/libphp5.so
The path on the right hand
side of the LoadModule statement must point to the path of the PHP
module on your system.  Then "make install" from above may have already
added this for you, but be sure to check.
Also, tell Apache to parse certain extensions as PHP in httpd.conf
  AddType application/x-httpd-php .php .phtml
  AddType application/x-httpd-php-source .phps
     
  
  mv /usr/bin/php /usr/bin/php4
  ln -s /opt/php5/bin/php /usr/bin/php
  ln -s /opt/php5.1.4 /opt/php5
  
  Note: 
  ^^^^^
  If later upgrading or testing new PHP modules, then install into a version specifc directory:
   ./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql --prefix=/opt/php-5.1.4b --with-xml --with-libxml-dir=/opt/libxml2 --enable-pcntl --enable-force-cgi-redirect --with-mssql=/opt/freetds
  and create then make /opt/php5 a link to this directory.
  This allows rollback and less disturbance to running daemons.


Database rights
==================   
There are some DB users you need to setup.

A. Local daemon use for PHP scripts (set the user/pw in config.inc):
grant SELECT,INSERT,UPDATE        ON inventory.*       to inventwrite@localhost IDENTIFIED by 'PASSWORD2';
SET PASSWORD FOR inventwrite@localhost = OLD_PASSWORD('PASSWORD2');
grant SELECT,INSERT,UPDATE,DELETE ON inventory.systems to inventwrite@localhost;
grant CREATE TEMPORARY TABLES ON inventory.*        to inventwrite@localhost;
grant ALL                     ON inventory.vmpsauth to inventwrite@localhost;


B. Setup a user for the remote delphi Windows GUI. see the vmps.ini file on the Windows client.
grant SELECT,INSERT        ON inventory.*       to inventwrite@'%' IDENTIFIED by 'PASSWORD1';
SET PASSWORD FOR inventwrite@'%' = OLD_PASSWORD('PASSWORD1');
grant SELECT,INSERT,UPDATE,DELETE ON inventory.systems to inventwrite@'%';
grant SELECT,INSERT,UPDATE ON inventory.users   to inventwrite@'%' ;
grant SELECT,INSERT,UPDATE,DELETE ON inventory.patchcable to inventwrite@'%';
grant SELECT,INSERT,UPDATE ON inventory.port    to inventwrite@'%' ;
grant SELECT,UPDATE        ON inventory.oper    to inventwrite@'%' ;
grant SELECT,UPDATE        ON inventory.switch  to inventwrite@'%' ;
grant SELECT,UPDATE        ON inventory.vlan    to inventwrite@'%' ;
grant SELECT,INSERT,UPDATE ON inventory.sys_class to inventwrite@'%' ;
grant SELECT,INSERT,UPDATE ON inventory.sys_os to inventwrite@'%';

C. Root is used by the sysadmin for local configuration. Make sur its only used from localhost.

D. The read-only webgui uses a "readonly" user.
==> To do



4. FreeNAC install part #1:
===========================
Rename config.inc.template
mv /opt/nac/etc/config.inc.template /opt/nac/etc/config.inc

Adapt /opt/nac/etc/config.inc

At this stage The DB is working and PHP access to the DB. Syslog works too 
and you see messages there.


5. FreeNAC install part #2:
===========================
Now we get the vmps daemon going.

Copy /etc/init.d/vmps from /opt/nac/contrib/startup_init.d
  cp /opt/nac/contrib/startup_init.d/vmps /etc/init.d
  ln -s /etc/init.d/vmps /usr/sbin/rcvmps
  chmod 750 /etc/init.d/vmps
  chkconfig vmps on
  vi /etc/init.d/vmps       [adapt IP address on vmpsd start line]
   
  Start and watch syslog for events:
  rcvmps start
  

Copy /etc/init.d/vmps_lastseen from /opt/nac/contrib/startup_init.d
  cp /opt/nac/contrib/startup_init.d/vmps_lastseen /etc/init.d/
  ln -s /etc/init.d/vmps_lastseen /usr/sbin/rcvmps_lastseen
  chmod 750 /etc/init.d/vmps_lastseen
  chkconfig vmps_lastseen on
  
  Start and watch syslog for events:
  rcvmps_lastseen start


touch /etc/vlan.db

Test purging of old devices (and watch syslog), then enable in cron:
0   1   26 * *   /opt/nac/bin/purge_unknowns  


6. FreeNAC install part #3: monitoring
===========================
There are several monitoring scripts that need to be individually tested and enabled in root cron:

Create /secure and copy from /opt/nac/bin the following scripts:
   monitor_processes.pl    secure.conf  proctst proctst.pl  check_disk       
   And make a subdir 'tmp'.           

*/3 *     * * *   /secure/check_disk 90 800
*/10 6-22 * * *   /secure/monitor_processes.pl vmpsd_external proctst
30   6-22 * * 1-5 /opt/nac/bin/monitor_allows.sh
*/4 *     * * *   /opt/nac/bin/flap_detect


7. FreeNAC install: syslog pruning
===========================
Enable syslog pruning and analyis:
ci -l /etc/logrotate.d/syslog
cp /opt/vmps/contrib/logrotate.d/syslog /etc/logrotate.d/syslog



8. FreeNAC install: backups
===========================
Scripts for backups up the system in different ways to the second internal disk:
Test these and enabled in root cron:
0   3    * * 1-5 /opt/nac/bin/dump_ports
0   3    * * 1   /usr/local/mysql/bin/mysqlhotcopy --allowold --keepold --regexp=".+" /disk2/backups/mysql 2>&1 | logger
0   3    * * 6   rdiff-backup  --exclude /media --exclude /sys --exclude /disk2 --exclude /proc  --exclude /mnt --print-statistics  / /disk2/backups/vmps0.rdiff;


8. FreeNAC install: router integration
===========================   
Adapt the relevant lins in config.inc, then try route_mac_ip from the command line, possibly enabling the debug flags. Then add an entry to the root cron.
*/6 *    * * *   /opt/nac/bin/router_mac_ip
  


Other notes
===========================   
Are syslog messages arriving from the Switches in /var/log/messages ?
   egrep -v `uname -n` /var/log/messages |awk '{print $4}'| sort| uniq -c |sort
    
Maybe discuss later:
/etc/hosts.allow 
/etc/hosts.deny

If the server is not exclusively used by FreeNAC with one administrator, you probably want to set a local root password for mysql.
mysqladmin -u root password 'new-password'
mysqladmin -u root -h MYHOST password 'new-password'

This is the sample crontab used in the VM
#Installation done based on /opt/nac/doc/master_server_install.txt

#NAC control
* * * * *              /opt/nac/bin/cron_restart_port
*/5 8-18 * * 1-5       /opt/nac/bin/port_scan --scannow
*/6 * * * *            /opt/nac/bin/router_mac_ip
0 1 * * 1              /opt/nac/bin/purge_unknowns

#Active scanning: once on weekend, once during the day
0 1 * * 6             /opt/nac/bin/port_scan
0 11 * * 1             /opt/nac/bin/port_scan

#Log pruning
0 6 * * 1-5            /usr/sbin/logrotate /etc/logrotate.conf | logger
0   1   26 * *         /opt/nac/bin/purge_unknowns

#Monitoring
30   6-22 * * 1-5      /opt/nac/bin/monitor_allows.sh
*/4 *     * * *        /opt/nac/bin/flap_detect
7-18 * * * 1-5         /secure/monitor_processes.pl proctst vmpsd_external
*/3 *     * * *        /secure/check_disk 90 800
*/4 * * * *            /opt/nac/bin/flap_detect

#Backups
0 1 * * 1              /opt/nac/bin/dump_ports
0 3 * * 1-5            /usr/local/mysql/bin/mysqlhotcopy --allowold --keepold --regexp=".+" /disk2/backups/mysql 2>&1 | logger
