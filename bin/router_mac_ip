#!/usr/bin/php -f
<?php
/**
 * /opt/nac/bin/router_mac
 *
 * Long description for file:
 * Get MAC / IP table of active hosts from core routers
 *
 * On IOS do "show ip arp"
 *        or "sh ip arp vrf insec"
 * Further reading: 
 *    http://www.cisco.com/public/sw-center/netmgmt/cmtk/mibs.shtml
 *    The "getif" tool for exploring MIBs.
 *
 * PHP version 5
 *
 * LICENSE: This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as published
 * by the Free Software Foundation.
 *
 * @package			FreeNAC
 * @author			Sean Boran (FreeNAC Core Team)
 * @copyright		2006 FreeNAC
 * @license			http://www.gnu.org/copyleft/gpl.html   GNU Public License Version 2
 * @version			SVN: $Id$
 * @link				http://www.freenac.net
 *
 */

$debug_flag1=false;
$debug_flag2=false;

require_once "funcs.inc";               # Load settings & common functions
$debug_to_syslog=TRUE;

define_syslog_variables();              # not used yet, but anyway..
openlog("router_mac_ip", LOG_PID, LOG_LOCAL5);

// allow performance measurements
   $mtime = microtime();
   $mtime = explode(" ",$mtime);
   $mtime = $mtime[1] + $mtime[0];
   $starttime = $mtime;

db_connect();
global $connect;


if ( !$conf->core_routers ) {   // no results, error?
   logit("no routers specified in core_routers variable in config.inc");
   log2db('info',"no routers specified in core_routers variable in config.inc");
   exit -1;
}


// Get the mac addresses of all unknown devices
// for use the autoupdating of DNS names, see below
if ( $conf->router_mac_ip_update_from_dns ) {   // feature enabled?

  #$sql="SELECT mac FROM systems WHERE name='unknown'";
  $sql="SELECT mac FROM systems WHERE name LIKE '%unknown%'";
  $result=mysql_query($sql,$connect);
  if (!$result) { die('Invalid query: '.mysql_error()); }
  $i=0;
  $uk_mac=array();
  while($row=mysql_fetch_row($result)){
        $uk_mac[$i]=$row[0];
        $i++;
  }
  debug1("router_mac_ip_update_from_dns: $i unknowns noted\n");
}


foreach (split(' ', $conf->core_routers) as $router) {
 $count_updates=0;
 // query interface list and split into an array
 debug2($router_snmpwalk." $router ipNetToMediaPhysAddress\n");
 $results=explode("\n", syscall($router_snmpwalk." $router ipNetToMediaPhysAddress"));


 if (( count($results) === 0 ) || (!strpos($results[0],'ipNetToMediaPhysAddress'))){   // no results, error?
   logit("No results retrieved from router $router: SNMP errors?");
   debug2($results[$i]);
   #log2db('info',"No results retrieved from router $router: SNMP errors?");
 }

 // go though each pair and update the SYSTEMS table
 for ($i = 0; $i < count($results); $i++){
  debug2($results[$i]);

  if ( preg_match("/ipNetToMediaPhysAddress\.(\d+)\.(.*) = STRING: (.*)/", $results[$i], $matches) ) {
     $ip=$matches[2];
     #debug2("$ip - $matches[3] ");
     $mac=normalise_mac($matches[3]);
     debug2("$ip - $mac ");

     if ( preg_match($conf->router_mac_ip_ignore_ip, $ip) ) {
       debug2("Ignore Non relevant Networks: $ip - $mac ");
       continue;
     }
     if ( preg_match($conf->router_mac_ip_ignore_mac, $mac) ) {
       debug2("Ignore Non relevant macs: $mac ");
       continue;
     }

     $query="UPDATE systems SET r_timestamp=NOW(), r_ip='" .$ip . "' "
        . " WHERE mac='" . $mac . "'";
        #echo("$query\n");
        $resource = mysql_query($query, $connect);
        if (!$resource) { die('Invalid query: ' . mysql_error()); }

        #$rowcount=mysql_affected_rows($resource);   # why does this not work?
        $rowcount=mysql_affected_rows();
        #debug1(" rows $rowcount ");
        if ($rowcount==1) {          # it worked
          debug1("$ip - $mac : updated in systems table");
          $count_updates++;

          // if this mac has no associated name, try to get the fqdn for it
          if ( $conf->router_mac_ip_update_from_dns ) {   // feature enabled?
            if (in_array($mac,$uk_mac)) {
              $fqdn=gethostbyaddr($ip);
              debug1("got $fqdn $ip $mac");
              if($fqdn!=$ip) { // We got the host name, now update it
                // strip domain name
                list($hostname_only) = split('[.]', $fqdn);
                $hostname_only = strtolower($hostname_only);
                $sql='UPDATE systems SET name=\''.$hostname_only.'\' WHERE mac=\''.$mac.'\'';
                logit($sql);
                logit("Changed name of $mac to its DNS name $hostname_only");
                if (!mysql_query($sql,$connect)) { die('Invalid query: '.mysql_error()); }
              }
            }
          }

        } else if ($rowcount==0) {   # entry does not exist, 0 rows
          #logit("$query");
          debug1("$ip - $mac : ignore");

        } else if ($rowcount > 1) {   # problem: duplicates
          #logit("$query");
          debug1("$ip - $mac : duplicates in systems table - ERROR");
        }   

  }
 }

 # Don't write to the GUI logging table any more, its too noisy/frequent
 #log2db('info',"Update $count_updates mac/ip tables from router $router");
 logit("Update $count_updates mac/ip tables from $router");
}

  // measure performance
   $mtime = microtime();
   $mtime = explode(" ",$mtime);
   $mtime = $mtime[1] + $mtime[0];
   $endtime = $mtime;
   $totaltime = ($endtime - $starttime);
   debug1("Time taken= ".$totaltime." seconds\n");

###
?>
