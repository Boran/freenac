#!/usr/bin/php 
<?php
/**
 * bin/deactivate_vmps.php
 *
 * Long description for file:
 *
 * This script configures all switch ports in the FreeNAC database to static.
 *
 * TESTED:
 *      Catalyst 2940 (IOS), 3560 (IOS), 2948 (CatOS)
 *
 * USAGE :
 *     	deactivate_vmps.php [switches...]
 *
 * PHP version 5
 *
 * LICENSE: This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as published
 * by the Free Software Foundation.
 *
 * package                     FreeNAC
 * author                      Hector Ortiz (FreeNAC Core Team)
 * copyright                   2007 FreeNAC
 * license                     http://www.gnu.org/copyleft/gpl.html   GNU Public License Version 2
 * version                     SVN: $Id$
 * link                        http://www.freenac.net
 *
 */


chdir(dirname(__FILE__));
set_include_path("../:./");
require_once "./funcs.inc.php";               # Load settings & common functions
require_once "./snmp_defs.inc.php";
$logger->setDebugLevel(0);
$logger->setLogToStdOut();

function print_usage($code)
{
   global $logger;
   $usage=<<<EOF
USAGE: deactivate_vmps.php [switches...] [OPTIONS]

        Web:      http://www.freenac.net/
        Email:    opennac-devellists.sourceforge.net

DESCRIPTION: Deactivate VMPS from the switches specified on the command line which are in the FreeNAC database.
	     Set as the static vlan on the switch port, the last_vlan field from the FreeNAC database.
	     If no switches are specified, it takes the list of all switches present in the FreeNAC database.
	     Changes are stored to an autogenerated file, unless a filename is specified with the -f option.
 	     The default filename is vmps-yyyy-mm-dd-hh:mm:ss

WARNING: No providing a list of switches from the command line, deactivates VMPS in your entire network.
         Use it wisely!

OPTIONS:
        -h              Display this help screen
	-f filename	Save changes to filename 
	-c rw_community	Use this SNMP RW community instead of the one defined in config.inc

EOF;
   $logger->logit( $usage);
   exit($code);
}

$file_timestamp=date('Y-m-d H:i:s');
$file_timestamp=str_replace(' ','-',$file_timestamp);
$file_name=dirname(__FILE__).'/vmps-'.$file_timestamp;

db_connect();
if ($argc>1)
   $options=getopt('hf:c:');

if ($options)						//Simple command line parsing
{
   if (array_key_exists('h',$options))
      print_usage(0);
   if (array_key_exists('f',$options))
      $file_name=dirname(__FILE__).'/'.trim($options['f']);
   if (array_key_exists('c',$options))
      $snmp_rw=trim($options['c']);
}

//
//Take parameters off the command line
//
$j=0;
for ($i=0;$i<$argc;$i++)
{
   switch($argv[$i])
   {
      case '-c':
      case '-f':
         ++$i;
         break;
      case strstr($argv[$i],'-c'):
      case strstr($argv[$i],'-f'):
         break;
      default:
         $command_line[$j]=$argv[$i];
         $j++;
         break;
   }
}

if ($j==1)
{
   $logger->logit( "\nWARNING: You are about to disable VMPS in all switches in your database\n");
   $logger->logit( "\nPress Ctrl+C to stop this task before the timer expires...\n\n");
   for ($i=10;$i>0;$i--)
   {
      $logger->logit( "$i seconds to go...\n");
      sleep(3);
   }
   $logger->logit( "\nProceeding to disable VMPS in all switches registered in the database\n\n");
   $query="select * from switch";
}
else
{
   $query="select * from switch where ";
   for ($i=1;$i<$j;$i++)
   {
      if ($i==1)
         $query.="name like '".mysql_real_escape_string($command_line[$i])."' or ip='".mysql_real_escape_string($command_line[$i])."'";
      else
         $query.="or name like '".mysql_real_escape_string($command_line[$i])."' or ip='".mysql_real_escape_string($command_line[$i])."'";
   }
   $query.=";";
}
$logger->debug($query,3);

while (!$res=mysql_query($query));
$total_switches=mysql_num_rows($res);
if (($argc>1)&&(mysql_num_rows($res)==0))
{
   $logger->logit( "No such name or ip found in the switch table\n");
   exit(1);
}

$counter=0;
$affected_ports=0;
$total_ports=0;
$file=fopen($file_name,'w');
if (!$file)
{
   $logger->logit( "Couldn't open file $file_name for writing\n");
   exit(1);
}

while ($result=mysql_fetch_array($res,MYSQL_ASSOC))
{
   $switch=$result['ip'];
   $query="select p.name as port_name, v.default_name as vlan from port p inner join switch sw on p.switch=sw.id inner join vlan v on p.last_vlan=v.id where p.last_vlan>2 and p.last_auth_profile='2' and sw.ip='$switch';";
   $logger->debug($query,3);
   while (!$res1=mysql_query($query));						//Execute query
   $rows=mysql_num_rows($res1);
   if ($rows == 0)
      continue;
   $total_ports+=$rows;
   $logger->logit( "Deactivating VMPS on switch $switch\n");
   $counter=0;
   while ($result1=mysql_fetch_array($res1,MYSQL_ASSOC))
   {
      $port=$result1['port_name'];
      $static_vlan=$result1['vlan'];
   
      if (set_port_as_static($switch, $port, $static_vlan))
      {
         fprintf($file,"%s,%s,%s\n",$switch,$port,$static_vlan);
         $counter++;
      }
   }
   if ($counter>0)
   {
      $string="$counter ports affected in switch $switch";
      $logger->logit( "\n\t$string\n\n");
      $logger->setLogToStdOut(false);
      $logger->logit($string);
      $logger->setLogToStdOut();
      log2db('info',"deactivate_vmps: ".$string);
   }

   $descr=@snmprealwalk($switch,$snmp_rw,$snmp_sw['descr']);
   if ($descr)
   {
      $text=array_map("remove_type",$descr);          //Determine if switch is IOS
      $ios=0;
      foreach($text as $string)
      {
         if (strpos($string,'IOS'))
            $ios++;
      }
   }
   $old=0;
   $written=0;
   if ($ios)                                                                                 //Switch is an IOS, perform a 'wr' using the old way
   {
      if (@snmpset($switch,$snmp_rw,$write_command['old'].'.0','i',1))
      {
         $old++;
         $written++;
         $logger->logit( "\tCurrent configuration saved to switch $switch\n\n");
      }
      else if (@snmpset($switch,$snmp_rw,$write_command['old'],'i',1))
      {
         $old++;
         $written++;
         $logger->logit( "\tCurrent configuration saved to switch $switch\n\n");
      }
   }
   if ($ios&&!$old)                                                                          //Old way didn't work, try the new one
   {                                                                                         //NOTE: This code below hasn't been tested
      $rand_val=rand(1,999);
      if (@snmpset($switch,$snmp_rw,$write_command['source'].'.'.$rand_val,'i',2))
      {
         if (@snmpset($switch,$snmp_rw,$write_command['destination'].'.'.$rand_val,'i',1))
         {
            if (snmpset($switch,$snmp_rw,$write_command['execute'].'.'.$rand_val,'i',4))
               $written++;
         }
      }
   }
   if ($ios&&!$written)
   {
      $logger->logit( "\tCouldn't save current configuration to switch $switch. Does this switch support a RW community?\n\n");
   }
   $affected_ports+=$counter;
}
fclose($file);
if ($j==1)
{
   $total_db=v_sql_1_select("select count(*) from port where last_auth_profile='2';");
   if (! $total_db)
      $total_db = 0;
   $string="Switches in total: $total_switches\tPorts affected: $affected_ports out of $total_ports\tNumber of ports to be affected (from db): $total_db";
   $logger->logit( "$string\n");
   $logger->setLogToStdOut(false);
   $logger->logit($string);
   $logger->setLogToStdOut();
   log2db('info',"deactivate_vmps: ".$string);
}
else
{
   $string="Switches in total: $total_switches\tPorts affected: $total_ports out of $total_ports";
   $logger->logit( "$string\n");
   $logger->setLogToStdOut(false);
   $logger->logit($string);
   $logger->setLogToStdOut();
   log2db('info',"deactivate_vmps: ".$string);

}
$string="deactivate_vmps has finished. Change file: $file_name";
$logger->logit("\n\n$string\n");
log2db('info',$string);

exit(0);


?>


